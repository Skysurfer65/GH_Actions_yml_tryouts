name: Build and test

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Cache dependencies
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set pip cache path
        id: get_path_linux
        if: runner.os == 'Linux'
        run: |
          echo "${runner.os}"
          echo "PIP_CACHE_PATH=$HOME/.cache/pip" >> $GITHUB_ENV
          #echo "::set-env name=PIP_CACHE_PATH::$HOME/.cache/pip"
      - name: Set pip cache path
        id: get_path_windows
        if: runner.os == 'Windows'
        run: |
          echo "PIP_CACHE_PATH=C:\Users\admin\AppData\Local\pip\Cache" >> $GITHUB_ENV
          #echo "::set-env name=PIP_CACHE_PATH::C:\Users\runneradmin\AppData\Local\pip\Cache"
      - name: Cache pip dependencies
        id: cache-pip-deps
        uses: actions/cache@v2
        with:
          path: ${{ env.PIP_CACHE_PATH }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  test1:
    name: pytest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore pip dependencies cache
        uses: actions/cache@v2
        with:
          path: ${{ env.PIP_CACHE_PATH }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: pytest -rA --verbose

  
